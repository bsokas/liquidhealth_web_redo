{"ast":null,"code":"var _jsxFileName = \"/Users/briansokas/Documents/Code/Ethermed/repos/liquidhealth_web_redo/src/App.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { CHANGE_CLICKSTATE } from './redux/actionTypes';\n\nconst mapStateToProps = state => {\n  const clickstate = state.clickstate;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeClickState: () => dispatch({\n      type: CHANGE_CLICKSTATE\n    })\n  };\n};\n\nclass App extends React.Component {\n  renderDynamicText() {\n    const clickstate = this.props.clickstate;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Welcome to the LiquidHealth web redesign! We decided our website needed a redo.\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/briansokas/Documents/Code/Ethermed/repos/liquidhealth_web_redo/src/App.jsx"],"names":["React","connect","CHANGE_CLICKSTATE","mapStateToProps","state","clickstate","mapDispatchToProps","dispatch","changeClickState","type","App","Component","renderDynamicText","props","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,gBAAgB,EAAE,MAAMD,QAAQ,CAAE;AAACE,MAAAA,IAAI,EAAEP;AAAP,KAAF;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAMQ,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAE;AACjB,UAAMP,UAAU,GAAG,KAAKQ,KAAL,CAAWR,UAA9B;AACD;;AAEDS,EAAAA,MAAM,GAAE;AAEN,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFADF,CADF;AAKD;;AAZ+B;;AAelC,eAAeb,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CI,GAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { CHANGE_CLICKSTATE } from './redux/actionTypes';\n\nconst mapStateToProps = (state) => {\n  const clickstate = state.clickstate;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeClickState: () => dispatch( {type: CHANGE_CLICKSTATE} )\n  }\n}\n\nclass App extends React.Component {\n  renderDynamicText(){\n    const clickstate = this.props.clickstate\n  }\n\n  render(){\n\n    return (\n      <>\n        <p>Welcome to the LiquidHealth web redesign! We decided our website needed a redo.</p>\n      </>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}